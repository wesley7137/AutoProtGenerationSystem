Title: Scalable telomere-to-telomere assembly for diploid and polyploid genomes
  with double graph
Abstract:   Despite recent advances in the length and the accuracy of long-read data,
building haplotype-resolved genome assemblies from telomere to telomere still
requires considerable computational resources. In this study, we present an
efficient de novo assembly algorithm that combines multiple sequencing
technologies to scale up population-wide telomere-to-telomere assemblies. By
utilizing twenty-two human and two plant genomes, we demonstrate that our
algorithm is around an order of magnitude cheaper than existing methods, while
producing better diploid and haploid assemblies. Notably, our algorithm is the
only feasible solution to the haplotype-resolved assembly of polyploid genomes.

Full Text: Scalable telomere-to-telomere assembly for diploid
and polyploid genomes with double graph
Haoyu Cheng1,2, Mobin Asri3, Julian Lucas3, Sergey Koren4, and Heng Li1,2,*
1Department of Data Sciences, Dana-Farber Cancer Institute, Boston, MA, USA
2Department of Biomedical Informatics, Harvard Medical School, Boston, MA, USA
3Genomics Institute, University of California, Santa Cruz, CA, USA
4Genome Informatics Section, Computational and Statistical Genomics Branch, National Human Genome Research
Institute, National Institutes of Health, Bethesda, MD, USA
*To whom correspondence should be addressed: hli@ds.dfci.harvard.edu
ABSTRACT
Despite recent advances in the length and the accuracy of long-read data, building haplotype-resolved genome assemblies from
telomere to telomere still requires considerable computational resources. In this study, we present an efficient de novo assembly
algorithm that combines multiple sequencing technologies to scale up population-wide telomere-to-telomere assemblies. By
utilizing twenty-two human and two plant genomes, we demonstrate that our algorithm is around an order of magnitude cheaper
than existing methods, while producing better diploid and haploid assemblies. Notably, our algorithm is the only feasible solution
to the haplotype-resolved assembly of polyploid genomes.
The emergence of accurate PacBio High-Fidelity (HiFi) long reads has revolutionized the assembly of large genomes,
making high-quality haplotype-resolved assembly a routine procedure1–3. However, HiFi reads are often not long enough
to resolve long exact repeats, resulting in fragmented components around repeat-rich regions such as centromeres4. Recent
advances by Oxford Nanopore Technologies (ONT) have enabled the generation of ultra-long reads, which are approximately
5–10 times longer than HiFi reads though at relatively lower accuracy5. The Telomere-to-Telomere (T2T) consortium has
demonstrated that with careful manual curation, combining HiFi and ultra-long reads could perfectly reconstruct the haploid
CHM13 human genome6.
Learning from the complete human genome assembly of CHM13, Verkko is a first effort towards automated telomere-
to-telomere assembly of diploid samples7. It can produce high-quality assembly when parental sequence data are available.
However, as we will show later, Verkko does not fully phase a single diploid sample without parental data and thus results
in incomplete assembly. It may produce relatively fragmented assembly at lower read coverage and is unable to produce
haplotype-resolved assemblies of polyploid samples. Verkko is also compute intensive, making it costly to deploy Verkko to a
large number of samples.
For the efficient near telomere-to-telomere assembly of diploid and polyploid samples, we developed hifiasm (UL) that
tightly integrates PacBio HiFi, ONT ultra-long, Hi-C reads and trio data and produces high-quality assembly in one go. Unlike
Verkko that is based on the multiplex de Bruijn graph8, 9, hifiasm (UL) represents sequences with two string graphs10(Fig. 1a).
The first string graph is built from HiFi reads (Fig. 1b), the same as the original hifiasm graph1. The second string graph is built
from ultra-long reads in reduced representation (Fig. 1b–d). Hifiasm (UL) then merges the two graphs to produce the final
assembly graph (Fig. 1e). The use of two assembly graphs at different scales separates hifiasm (UL) from other assemblers.
To compare hifiasm (UL) with Verkko at a population scale, we evaluated both approaches using 22 human samples selected
from the Human Pangenome Reference Consortium (HPRC)14. Eleven of these samples were chosen from the Year-1 dataset of
the HPRC, while the remaining eleven samples were selected from the Year-2 dataset (Supplementary Table 3). We carried out
trio assembly for all 22 samples but only did Hi-C-based single-sample assembly for the 11 Year-1 samples. Verkko natively
supports trio binning assembly. As it does not support internal Hi-C phasing, we utilized the Hi-C phasing approach, gfase11, in
combination with Verkko for the single-sample phased assembly. In total, we collected a total of 132 assembled haplotypes for
comprehensive evaluation of hifiasm (UL) and Verkko.
For each sample, both hifiasm (UL) and Verkko yielded assemblies of similar sizes (Fig. 2a) and exhibited comparable
phasing accuracy (Supplementary Table 1). However, when assembling HPRC Year-1 samples at lower HiFi and ultra-long
coverage (Supplementary Table 3), hifiasm (UL) tended to produce more contiguous assemblies (Fig. 2b). It generated
contiguous contigs spanning from telomere to telomere for multiple chromosomes, whereas Verkko did not produce telomere-
1arXiv:2306.03399v1  [q-bio.GN]  6 Jun 2023b
h0 h2 h9 h7 h5h3 h1 h8 h13
h4 h10 h11 h12u0u1
u5
u6h16h14
h15u2u3u4
u9
u8
u7HiFi string graph
Ultra-long integer sequences
h0h3 h2 u0
h3h2 h1 u1
h2h1h9 h8 u2
h13h5 h14 u3
h14 h16 u4
h0h4 h2 u5
h4h2 h10 u6
h10h9h11 u7
h12h5 u8
h15 h16 u9h10
h9
h5Ultra-long integer graph
u0 u1 u2 u3 u4
u5 u6 u7 u8 u9
h0 h3 h2 h1 h9 h8 h13 h5 h14 h16
h0 h4 h2 h10 h9 h11 h12 h5 h15 h16Ultra-long integer contigs
h9
h7h5 h3 h1 h8 h13
h4 h10 h11 h12h16 h14
h15Final graph merging both 
HiFi and ultra-long graphs
h0
h0h2
h2 h9 h5 h16c d
eHiFi reads
Corrected readsUltra-long 
reads
Ultra-long-to-HiFi 
read alignments
HiFi graph
Ultra-long-to-HiFi 
graph alignments
Ultra-long integer 
graph
Final assembly 
graphTrio, Hi-C, 
phasing 
markers
Phasing partitions
Final 
assembliesAssembly
Assembly
Merge
Phasinga
Error CorrectionFigure 1. Hybrid assembly with PacBio HiFi and ONT ultra-long reads. (a) Overall workflow. Hifiasm (UL) corrects HiFi reads,
constructs a string graph with HiFi reads alone and aligns ultra-long reads to the HiFi graph. Based on the graph alignment, hifiasm (UL)
encodes an ultra-long read as a sequence of integers with each integer uniquely corresponding to a node (also known as a unitig) in the HiFi
graph. It then constructs a string graph of integer-encoded ultra-long reads, and merges the HiFi graph and the ultra-long graph to generate
the final assembly. (b)HiFi assembly graph and ultra-long alignment. Circles in orange and blue represent heterozygous nodes constructed
by HiFi reads from haplotype 1 and haplotype 2, respectively. Green circles represent homozygous nodes within the HiFi string graph. The
alignment paths of ultra-long reads from haplotype 1 and haplotype 2 are represented by orange and blue lines, respectively. (c)Ultra-long
reads encoded as sequences of integer unitig identifiers in the HiFi graph. Nucleotide sequences are ignored at this step. (d)Ultra-long
assembly graph and the resulting contigs in the integer encoding. (e)Final assembly graph by incorporating the ultra-long contigs into the
HiFi graph. From the initial HiFi graph, hifiasm (UL) removes unitigs that are present on the ultra-long contigs and adds the ultra-long
contigs back together with edges between remaining unitigs and unitigs on the ultra-long contigs. Some unitigs (green circles in the example)
may appear multiple times in the final graph.
to-telomere contigs for Year-1 samples (Supplementary Fig. 1a). The consistent improvement to assembly contiguity highlights
the advantages of our approach. Although Verkko could produce scaffolds that bridge entire chromosomes (Supplementary
Table 4), the assembly gaps in the scaffolds will complicate downstream analysis. In addition, Verkko could not assemble
chromosome-long scaffolds for all chromosomes. We anyway need a Hi-C-based scaffolder for reliable scaffolding.
For HPRC Year-2 datasets at higher coverage (Supplementary Table 1), Verkko assemblies were broadly comparable to
hifiasm (UL) assemblies in terms of assembly contiguity (Fig. 2b), the number of telomere-to-telomere contigs (Supplementary
Fig. 1a), and phasing accuracy (Supplementary Table 1). A noticeable difference between the two assemblers is that Verkko
did not assign all contigs to specific haplotypes given Hi-C data. We observed that the majority of unassigned sequences
come from unpaired sex chromosomes of male samples, but there are also relatively larger numbers of unassigned sequences
from paired sex chromosomes and autosomes. Due to these unassigned contigs, Verkko assemblies missed more autosomal
genes in comparison to hifiasm (UL) and were thus less complete (Fig. 2c). Meanwhile, for samples HG01099 and HG03710,
Verkko produced noticeably more duplicated genes. Close inspection of these errors revealed that Verkko duplicated a few
2/8HG002
HG01099
HG02004
HG02071
HG02293
HG02300
HG02647
HG02809
HG03710
HG03927
HG04228
HG00438
HG00741
HG01175
HG03516
HG01071
HG01978
HG00733
HG00621
HG01891
HG01106
HG028860100020003000400050006000700080009000Length (Mb)
HPRC Year 2 HPRC Year 1aAssembly length (human)
Assembler
hifiasm(UL)_trio
hifiasm(UL)_hic
verkko_trio
verkko_gfaseHaplotype
Hap1
Hap2
Unassigned
HG002
HG01099
HG02004
HG02071
HG02293
HG02300
HG02647
HG02809
HG03710
HG03927
HG04228
HG00438
HG00741
HG01175
HG03516
HG01071
HG01978
HG00733
HG00621
HG01891
HG01106
HG02886020406080100120140160N50 (Mb)
HPRC Year 2 HPRC Year 1bAssembly contiguity (human)
hifiasm(UL)_trio
hifiasm(UL)_hic
verkko_trio
verkko_gfase
HG002
HG01099
HG02004
HG02071
HG02293
HG02300
HG02647
HG02809
HG03710
HG03927
HG04228
HG00438
HG00741
HG01175
HG03516
HG01071
HG01978
HG00733
HG00621
HG01891
HG01106
HG028860500100015002000Gene (#)
HPRC Year 2 HPRC Year 1cAssembly completeness (human)
Assembler
hifiasm(UL)_trio
hifiasm(UL)_hic
verkko_trio
verkko_gfaseProblematical Gene
Dup Gene
Frag Gene
Miss Gene
Average
(11 HPRC 
Year 2 samples)HG02071 HG02647 HG03927050100150200250300350400Cost ($)
34
1842
2535
2042
25301 298307311319
310318329dComputational cost (human)
hifiasm(UL)_trio
hifiasm(UL)_hicverkko_trio
verkko_gfase
ArabidopsisPotato (hap1) Potato (hap2) Potato (hap3) Potato (hap4)020040060080010001200Length (Mb)e Assembly length (plant)
Assembler
hifiasm(UL)
hifiasm(HiFi)
verkkoContig
>= 500kb
< 500kb
ArabidopsisPotato (hap1) Potato (hap2) Potato (hap3) Potato (hap4)01020304050N50 (Mb)f Assembly contiguity (plant, >=500kb)
hifiasm(UL)
hifiasm(HiFi)
verkko
ArabidopsisPotato (hap1) Potato (hap2) Potato (hap3) Potato (hap4)02468BUSCO (%)g Assembly completeness (plant, >=500kb)
Assembler
hifiasm(UL)
hifiasm(HiFi)
verkkoProblematical Gene
Dup Gene
Frag Gene
Miss GeneFigure 2. Statistics of different assemblies. Hifiasm(UL) trio and verkko trio assemblies were generated using HiFi and ultra-long reads,
along with parental short reads. Hifiasm(UL) hic and verkko(UL) gfase assemblies were constructed using HiFi, ultra-long, and Hi-C reads
obtained from the same sample. Verkko(UL) gfase applied the standalone Hi-C phasing algorithm, gfase11, to the Verkko assembly graph.
(a)Assembly length of 11 human samples. (b)Contig N50 representing the assembly contiguity of human samples. (c)Problematical
autosomal genes reported by the asmgene method12. The number of each assembly is the sum of the asmgene results for haplotype 1 and 2.
(d)Cloud computing cost for assembling human data. Only three samples were assembled by Verkko using cloud computing. (e)Assembly
length of the haploid Arabidopsis thaliana sample and the autotetraploid potato sample. Hifiasm(HiFi) represents hifiasm assemblies without
the ultra-long integration. (f)Contig N50 of Arabidopsis and potato assemblies by filtering out contigs shorter than 500kb. (g)BUSCO13
scores of Arabidopsis and potato assemblies by filtering out contigs shorter than 500kb.
3/8regions on one haplotype but left these regions blank on the other haplotype. Hifiasm (UL) was less affected by this issue.
We assembled all Year-2 samples with hifiasm (UL) and three samples with Verkko using cloud computing and recorded the
cost. Hifiasm (UL) is 8–15 times more cost-effective. The low computational cost of hifiasm (UL) is particularly important for
population-scale telomere-to-telomere assembly projects.
We used all HiFi reads and ultra-long reads with a minimum length of 50kb from the Arabidopsis thaliana (Col-0) dataset15
to evaluate the assembly results for non-human genomes (Fig. 2e–g). As an inbred plant strain, A. thaliana Col-0 has five long
chromosomes with a large number of ribosome DNAs (rDNAs) on the short arms of chromosomes 2 and 4. Hifiasm (UL)
produced exactly five contigs that are 500 kb or longer. Three of them were telomere-to-telomere contigs corresponding to
chromosomes 1, 3 and 5 (Supplementary Fig. 1b). The other two contigs represented the majority of chromosomes 2 and 4
except the rDNA arrays on their short arms. Hifiasm (UL) assembled tens of Mb of small contigs <500 kb (Fig. 2e). Almost
all of them could be aligned to rDNA or the chloroplast DNA. Also interestingly, the contig corresponding to chromosome
2 integrated 294 kb of mitochondrial DNA towards the telomere end of the short arm. This integration is also present in the
assembly done by the authors who produced the dataset15but is absent from the A. thaliana reference genome or the assembly
done by Naish et al16. For the A. thaliana dataset, Verkko only generated one telomere-to-telomere contig corresponding to
chromosome 5 (Supplementary Fig. 1b), partly due to homozygous regions that are longer than ultra-long reads but do not span
entire chromosome arms. The Verkko assembly at present was less contiguous (Fig. 2f) and less complete based on the BUSCO
evaluation13(Fig. 2g). The Verkko contig corresponding to chromosome 2 was fragmented on the short arm and did not reveal
the mitochondrion integration. Both Verkko and hifiasm (UL) assemblies were more contiguous hifiasm HiFi-only assembly,
indicating the additional power of ultra-long reads.
To evaluate polyploid assembly, we further assembled an autotetraploid potato genome17. As Verkko does not support
polyploid phasing, only hifiasm (UL) and hifiasm (HiFi) were applied with all HiFi reads and ultra-long reads with a minimum
length of 50kb. By leveraging the additional genetic map information from progeny, both hifiasm (UL) and hifiasm (HiFi)
could assemble four haplotypes based on the polyploidy graph-binning approach (Methods). The integration of ultra-long reads
not only significantly increased assembly contiguity (Fig. 2f and Supplementary Fig. 1b) but also improved the completeness
for all haplotypes (Fig. 2g). For the polyploid genome assembly, the main limitation of our current algorithm is that it requires
genetic map information from progeny. In order to address this issue, we implemented an experimental single-sample approach
using Hi-C phasing, and applied it to the autotetraploid potato dataset. This resulted in four haplotype assemblies, which have
slightly worse phasing accuracy and contiguity in comparison to the genetic-map-based assemblies. However, the four Hi-C
phased haplotype assemblies are imbalanced, with one assembly being 20% larger than the others. In the future, we plan to
address this issue by proposing Hi-C phasing approaches specifically designed for polyploid genomes.
The availability of ultra-long or accurate long reads has significantly advanced the development of de novo genome
assemblies. Recently, the Human Pangenome Reference Consortium (HPRC) has successfully applied our original hifiasm
algorithm to achieve high-quality haplotype-resolved assemblies in a population-scale utilizing accurate HiFi reads, while the
Telomere-to-Telomere (T2T) consortium has demonstrated the feasibility of reconstructing a human genome from telomere
to telomere by co-assembling HiFi and ultra-long reads. In this study, we present a new hybrid assembly algorithm, hifiasm
(UL), which provides an ultra-fast and robust solution for telomere-to-telomere genome assemblies in a population-scale. We
anticipate that hifiasm (UL) will be a highly competitive de novo assembler for numerous large-scale telomere-to-telomere
assembly projects in the coming years. In the long term, hifiasm (UL) will facilitate a more comprehensive understanding of
complex genomic regions such as centromeres and highly repetitive segmental duplications.
Methods
Overview of hifiasm (UL). The main objective of hifiasm (UL) is to leverage the benefits of HiFi and ultra-long reads,
simplifying the assembly graph as much as possible (Fig. 1). A complete and clean assembly graph will substantially simplify
the following steps like Hi-C phasing and phased contig generation. Our previous phasing algorithms1, 18are then applied to
the graph to produce haplotype-resolved telomere-to-telomere assemblies. In building the high-quality assembly graph, hifiasm
(UL) generally follows the traditional hybrid assembly paradigm, which uses the accurate HiFi graph as the backbone and
extends the graph by aligning ultra-long reads to it. However, unlike existing methods, hifiasm (UL) performs an additional
round of ultra-long-to-HiFi alignments in advance. This provides extra information for accurately constructing the HiFi graph
and alleviates the contained read problem specifically for the string graph19. We then create an integer graph for the ultra-long
reads and subsequently merge it with the initial HiFi graph to produce the final assembly graph.
The advantages of hifiasm (UL) stem mainly from the novel double graph framework for co-assembly (Fig. 1). Indeed, there
are several existing hybrid assemblers designed to combine shorter accurate reads as well as longer noisy reads, but they all rely
on the straightforward accurate-read-first assembly strategy: that is, they first build the assembly graph with accurate reads, and
then further resolve the graph by aligning long noisy reads onto the graph. Although this approach takes the information among
4/8HiFi reads
A h1
A h2
A h3
C h10
C h9
C h8A h11
h12h7
h6h4
h5
Heterozygous allelea
Graph construction
h4 h5h1 h2 h3
h8 h9 h10h6 h7HiFi string graph without 
contained readsb
h4 h5h1 h2 h3
h8 h9 h10h6 h7 h12 h11HiFi string graph with 
contained reads
u1u2u3
u4
u5
u6u7
h4 h5h1 h2 h3
h8 h9 h10h6 h7 h1221
21 212 22
22Simplify uncritical contained reads
HiFi string graph with 
ultra -long informationExtended Data Fig. 1. Accurate HiFi string graph combining PacBio HiFi and ONT ultra-long reads. (a) Effect of contained reads in
the string graph. Rectangles in orange and blue represent heterozygous HiFi reads from haplotype 1 and haplotype 2, respectively. Green
rectangles are HiFi reads originating from homozygous regions, whereas red rectangles are contained reads. The string graph is constructed
using all reads, except for two contained reads. (b)Hifiasm (UL) aligns ultra-long reads to the HiFi string graph with contained reads to
alleviate the contained read problem. The alignment paths of ultra-long reads from haplotype 1 and haplotype 2 are represented by orange
and blue lines, respectively. Despite being a contained read, h12 is retained as the critical read because it is covered by ultra-long reads u6
and u7. To ensure accurate graph cleaning, hifiasm (UL) also tracks the number of ultra-long reads that support each edge as its weight. For
instance, the edge weight between h5 and h8 is 2 because ultra-long reads u4 and u5 cover it.
accurate reads as well as the information between accurate reads and noisy reads, it disregards the critical information among
noisy reads. To fully exploit all reads, the double graph framework in hifiasm (UL) employs a two-stage approach. First, it
builds two string graphs individually, one for HiFi reads (Fig. 1b) and another for ultra-long reads (Fig. 1d). Second, it merges
the two graphs to produce a final graph that combines both HiFi and ultra-long reads (Fig. 1e). This approach ensures that the
information contained in both types of reads is fully leveraged, resulting in a more accurate and complete genome assembly.
Building an accurate string graph as the backbone. A string graph is an assembly graph that preserves the information of
complete reads, where each node represents a read, and edges connecting the nodes correspond to overlaps between reads.
Hifiasm (UL) builds the initial backbone graph with HiFi reads, as they are much more accurate than ultra-long reads. To
further eliminate sequencing errors, all HiFi reads are self-corrected with the haplotype-resolved error correction algorithm
described in the original hifiasm1. Once the graph is constructed, it is necessary to perform multiple rounds of graph cleaning
to simplify the graph by removing edges that are less likely to be real.
Although the string graph has been widely utilized in many long-read assemblers, the issue of the contained read remains
unclear and could potentially impact the completeness of the graph19. Given two reads XandY, if there is an overlap between
XandYthat covers a part of Xand the whole Y,Yis a contained read that is totally contained in X. Extended Data Fig. 1a
gives an example. Read h11 and h12 are two contained reads covered by read h3. Practical implementations of the string
graph remove all contained reads when building graphs, since the edges in the string graph correspond to the prefix-to-suffix or
suffix-to-prefix overlaps between reads10. However, simply ignoring contained reads could introduce breakpoints in the string
graph, especially in highly repetitive regions and homologous regions between two haplotypes. For instance, read h12 is a
critical read for one haplotype (reads in blue) but is an unnecessary contained read for another haplotype (reads in orange), as
shown in Extended Data Fig. 1a. Removing read h12 does not affect the haplotype in orange but leads to a breakpoint for the
haplotype in blue, resulting in a fragmented assembly graph. Identifying critical contained reads and retaining them in the
string graph is the primary challenge posed by the contained read problem. Several approaches have been proposed to tackle it
based on the simplified assumptions of read coverage or length19, which are not always reliable, especially in highly repetitive
regions.
Hifiasm (UL) alleviates the contained read problem within the HiFi string graph by utilizing ultra-long-to-HiFi read
alignments. A HiFi read is considered a critical contained read only if it lacks sufficient informative variants to distinguish it
from reads originating from other repeat copies (read h12 in Extended Data Fig. 1a). Given that ultra-long reads are frequently
ten times longer than HiFi reads (with a median length exceeding 100kb), it is less probable that an ultra-long read is a critical
5/8contained read without any informative variant. As a result, when ultra-long reads are aligned to HiFi reads, the HiFi contained
reads that must be covered by ultra-long read alignments are expected to be the critical reads. To this end, hifiasm (UL)
theoretically constructs a HiFi string graph that includes both contained and uncontained reads (Extended Data Fig. 1b). It then
employs the graph alignment to align all ultra-long reads to this graph. As shown in Extended Data Fig. 1b, the contained read
h12 must be covered by the alignment paths of ultra-long reads u6 and u7, while another contained read h11 could be skipped
by read h3. Consequently, hifiasm (UL) retains the critical read h12 for constructing a complete string graph of HiFi reads,
while safely removing read h11 to simplify the graph.
The ultra-long-to-HiFi read alignment could also be used to avoid the incorrect graph cleaning. In an ideal scenario where
all HiFi reads are longer than any homozygous or repetitive regions, each node in the string graph should have a maximum
of one edge extending towards the left and right sides. However, due to the limited length of HiFi reads, some nodes may
have multiple edges, making it difficult for assemblers to determine the real number of edges to be retained. For instance,
hifiasm and HiCanu3utilize a length-based strategy that prioritizes the edge with the longest overlap length and often removes
other shorter edges. These heuristics graph cleaning solutions may result in the overcutting of real edges or retaining unrelated
edges. If the initial backbone HiFi graph is either oversimplified or too complex, the downstream steps of hifiasm (UL) may not
accurately resolve difficult-to-assemble regions. By utilizing the ultra-long-to-HiFi read alignment, hifiasm (UL) is able to
ascertain the number of ultra-long reads supported for each edge, providing additional information to prevent incorrect graph
cleaning (Extended Data Fig. 1b).
Integer graph with ultra-long reads. To fully capture the length information of ultra-long reads, hifiasm (UL) constructs
another string graph using only those reads. However, generating the string graph requires the computationally intensive all-
versus-all pairwise read comparison, which constitutes the primary bottleneck in the long-read assembly workflow. Moreover,
identifying correct overlaps among ultra-long reads is particularly challenging due to their significantly higher error rate
compared to HiFi reads. Furthermore, the high frequency of recurrent sequence errors in ONT ultra-long reads makes it nearly
impossible to accurately identify overlaps in difficult regions.
Hifiasm (UL) constructs a lightweight integer graph to entirely avoid the expensive all-versus-all base-level read comparison
and ensure the accuracy of the ultra-long graph is comparable to that of the HiFi graph. In short, all ultra-long reads are
converted from the base pair space to a low-dimensional integer space using the graph alignments of ultra-long reads. By
working in the integer space, the graph construction procedure is both efficient and straightforward. The detailed steps of the
integer graph construction are listed as follows.
1.Mapping ultra-long reads into the integer space. All ultra-long reads are aligned to the HiFi graph to obtain the alignment
paths (Fig. 1b). Given an ultra-long read, hifiasm (UL) first collects its linear alignments to the nodes of the HiFi
graph using pairwise base-level alignments. Linear alignments are then chained in the graph space using the approach
described in minigraph20. A graph alignment path is a sequence of the aligned node identifiers. For each ultra-long read,
hifiasm (UL) only keeps the node identifiers and disregards all alignment details and base pairs. Node identifiers can be
represented as integers, meaning that ultra-long reads of over tens of kilobases are transformed into ultra-long sequences
consisting of tens of integers (Fig. 1c).
2.Calculating overlaps among ultra-long integer sequences. To construct a string graph in the integer space, obtaining
overlaps between integer sequences is essential. As the base-level sequencing errors within ultra-long reads have already
been corrected through the graph alignment to the accurate HiFi graph, hifiasm (UL) only allows exact overlaps in the
integer space. Notably, this step is considerably faster than the conventional all-versus-all inexact pairwise alignment.
3.Constructing an integer graph. An integer graph is a type of string graph where each node is an integer sequence. Hifiasm
(UL) constructs an integer graph by utilizing ultra-long integer sequences and their overlaps (Fig. 1d). Specifically,
each node in this graph represents an ultra-long integer sequence, and the edges connecting the nodes correspond to
exact overlaps between these sequences. However, even after this initial construction, multiple rounds of standard graph
cleaning are still necessary to further simplify the integer graph. As ultra-long reads are typically long enough to assemble
through repetitive or homozygous regions, hifiasm (UL) employs highly aggressive graph cleaning strategies to eliminate
ambiguous edges associated with each node.
4.Producing integer contigs. A contig corresponds to a non-branching path in the string graph. Given a contig in the integer
graph, hifiasm (UL) produces its sequence by concatenating the subsequences of nodes within the corresponding path
(Fig. 1d). After the contig generation process, each resulting contig is an integer sequence that is significantly longer
than any individual ultra-long read. In fact, these integer contigs represent the paths that can untangle intricate structures
within the initial HiFi graph.
6/8Building final assembly graph by graph incorporation. The integer graph produces ultra-long integer contigs that correspond
to assembly paths within the initial HiFi graph. These integer contigs represent another HiFi string graph that resolves the
majority of tangles and homozygous regions within the initial HiFi graph into linear sequences. By incorporating ultra-long
integer contigs into the initial HiFi graph, hifiasm (UL) can produce the final assembly. Specifically, hifiasm (UL) first removes
all nodes within the initial HiFi graph that also appear in ultra-long integer contigs, and then merges the remaining nodes and
overlaps with ultra-long integer contigs. Fig. 1e provides an example. In the final assembly graph, all nodes except h7 come
from ultra-long integer contigs. This is because all nodes except node h7 are present in both the initial HiFi graph (Fig. 1b) and
ultra-long integer contigs (Fig. 1d).
Constructing haplotype-resolved assemblies. The high-quality assembly graphs combining HiFi and ultra-long reads
significantly simplifies the generation of haplotype-resolved assemblies. With the addition of Hi-C or parental short reads,
hifiasm (UL) can reuse previous Hi-C18or trio-binning1algorithms to assign haplotype-specific markers to the nodes of the
assembly graph. The final haplotype-resolved assemblies are then produced using the graph-binning strategy1. For polyploid
genomes, we implemented a polyploidy graph-binning approach that extends our previous diploid graph-binning method. In
the polyploidy graph-binning approach, when emitting the assembly of one haplotype, all nodes with other haplotype-specific
markers are discarded from the assembly graph. This is the main difference between the polyploidy graph-binning and the
diploid graph-binning approaches.
Optimizing for cloud computing. To evaluate the computational cost of both hifiasm (UL) and Verkko, we assembled all
human samples with hifiasm (UL) and three human samples with Verkko using the Terra platform on top of Google Cloud
Platform. We further reduced the computational costs by executing assemblers with preemptible instances. A preemptible
instance takes much lower cost but its running times often cannot exceed 24 hours. As a result, both hifiasm (UL) and Verkko
were divided into multiple short tasks, which were executed individually using preemptible instances (Supplementary Section
1.4).
Acknowledgements
This study was supported by US National Institutes of Health (grant R01HG010040, U01HG010971 and U41HG010972 to
H.L., grant 1K99HG012798 to H.C.). We thank the Human Pangenome Reference Consortium for making Year-1 and Year-2
datasets publicly available.
Author contributions
H.C. and H.L. designed the algorithm, implemented hifiasm (UL) and drafted the manuscript. H.C. benchmarked hifiasm (UL)
and other assemblers. M.A., J.L. and S.K. designed the evaluation of human genome assemblies.
Competing interests
The authors declare no competing interests.
Data availability
Human reference genome: GRCh38; HiFi reads of HPRC Year-2 samples: https://s3-us-west-2.amazonaws.com/human-pange
nomics/index.html?prefix=submissions/1E2DD570-3B26-418B-B50F-5417F64C5679--HIFI DEEPCONSENSUS/; ONT
ultra-long reads of HPRC Year-2 samples: https://s3-us-west-2.amazonaws.com/human-pangenomics/index.html?prefix=submi
ssions/90A1F283-2752-438B-917F-53AE76C9C43E--UCSC HPRC nanopore Year2/; Hi-C reads of HPRC Year-2 samples:
https://s3-us-west-2.amazonaws.com/human-pangenomics/index.html?prefix=submissions/4C696EB9-9AD2-47A2-8011-2
F43977CC4E0--Y2-HIC/; Parental short reads of HPRC Year-2 samples: https://s3-us-west-2.amazonaws.com/human-pange
nomics/index.html?prefix=submissions/AD30A684-C7A8-4D24-89B2-040DFF021B0C--Y2 1000G DATA/; All reads of
HPRC Year-1 samples: https://github.com/human-pangenomics/HPP Year1 Data Freeze v1.0; All reads of Arabidopsis: https:
//ngdc.cncb.ac.cn/search/?dbId=gsa&q=CRA004538; All reads of potato: https://ngdc.cncb.ac.cn/gsa/browse/CRA006012;
Hifiasm (UL) assemblies of HPRC Year-2 samples: “ *hifiasm v0.19.5* ” from https://s3-us-west-2.amazonaws.com/hum
an-pangenomics/index.html?prefix=submissions/53FEE631-4264-4627-8FB6-09D7364F4D3B--ASM-COMP/; Verkko
assemblies of HPRC Year-2 samples: “ *verkko 1.3.1* ” from https://s3-us-west-2.amazonaws.com/human-pangenomics/ind
ex.html?prefix=submissions/53FEE631-4264-4627-8FB6-09D7364F4D3B--ASM-COMP/; All evaluated HPRC Year-1 and
plant assemblies are available at https://zenodo.org/record/7996422 and https://zenodo.org/record/7962930, respectively.
7/8Code availability
Hifiasm (UL) is available at https://github.com/chhylp123/hifiasm.
Reporting Summary
Further information on research design is available in the Nature Research Reporting Summary linked to this article
References
1.Cheng, H., Concepcion, G. T., Feng, X., Zhang, H. & Li, H. Haplotype-resolved de novo assembly using phased assembly
graphs with hifiasm. Nat. Methods 18, 170–175 (2021).
2.Wenger, A. M. et al. Accurate circular consensus long-read sequencing improves variant detection and assembly of a
human genome. Nat. Biotechnol. 37, 1155–1162 (2019).
3.Nurk, S. et al. HiCanu: accurate assembly of segmental duplications, satellites, and allelic variants from high-fidelity long
reads. Genome Res 30, 1291–1305 (2020).
4.Porubsky, D. et al. Gaps and complex structurally variant loci in phased genome assemblies. Genome Res. (2023).
5.Jain, M. et al. Nanopore sequencing and assembly of a human genome with ultra-long reads. Nat. biotechnology 36,
338–345 (2018).
6.Nurk, S. et al. The complete sequence of a human genome. Science 376, 44–53 (2022).
7.Rautiainen, M. et al. Telomere-to-telomere assembly of diploid chromosomes with Verkko. Nat. Biotechnol. 1–9 (2023).
8.Bankevich, A., Bzikadze, A. V ., Kolmogorov, M., Antipov, D. & Pevzner, P. A. Multiplex de bruijn graphs enable genome
assembly from long, high-fidelity reads. Nat Biotechnol 40, 1075–1081 (2022).
9.Rautiainen, M. & Marschall, T. MBG: Minimizer-based sparse de Bruijn Graph construction. Bioinformatics 37, 2476–2478
(2021).
10.Myers, E. W. The fragment assembly string graph. Bioinformatics 21, ii79–ii85 (2005).
11.Lorig-Roach, R. et al. Phased nanopore assembly with Shasta and modular graph phasing with GFAse. bioRxiv 2023–02
(2023).
12.Li, H. Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018).
13.Sim˜ao, F. A., Waterhouse, R. M., Ioannidis, P., Kriventseva, E. V . & Zdobnov, E. M. BUSCO: assessing genome assembly
and annotation completeness with single-copy orthologs. Bioinformatics 31, 3210–3212 (2015).
14.Liao, W.-W. et al. A draft human pangenome reference. Nature 617, 312–324 (2023).
15.Wang, B. et al. High-quality Arabidopsis thaliana genome assembly with nanopore and HiFi long reads. Genomics,
proteomics & bioinformatics 20, 4–13 (2022).
16.Naish, M. et al. The genetic and epigenetic landscape of the arabidopsis centromeres. Science 374, eabi7489 (2021).
17.Bao, Z. et al. Genome architecture and tetrasomic inheritance of autotetraploid potato. Mol. Plant 15, 1211–1226 (2022).
18.Cheng, H. et al. Haplotype-resolved assembly of diploid genomes without parental data. Nat. Biotechnol. 40, 1332–1335
(2022).
19.Jain, C. Coverage-preserving sparsification of overlap graphs for long-read assembly. Bioinformatics 39, btad124 (2023).
20.Li, H., Feng, X. & Chu, C. The design and construction of reference pangenome graphs with minigraph. Genome Biol 21,
265 (2020).
8/8Supplementary Information for
“Scalable telomere-to-telomere assembly for diploid and polyploid genomes with double graph”
1 Software commands
1.1 Filtering ultra-long reads
We discarded short ultra-long reads to avoid assembly errors and reduce the running time. For HPRC Year 2 samples,
ultra-long reads with a length less than 100kb were filtered out using seqkit (version 2.3.0):
seqkit seq -m1000000 <ultra-long-reads.fasta>
In the case of HPRC Year 1 and plant samples, ultra-long reads shorter than 50kb were removed.
seqkit seq -m500000 <ultra-long-reads.fasta>
1.2 Hifiasm
To produce Hi-C phased assemblies with HiFi, Hi-C and ultra-long reads, hifiasm (version 0.19.4-r587) was run with
the following command:
hifiasm -o <outputPrefix> -t <nThreads> --h1 <HiC-reads-R1.fasta> --h2 <HiC-reads-R2.fasta> \
--hom-cov <homozygous coverage> --ul <ultra-long-reads.fasta> <HiFi-reads.fasta>
For the trio-binning assembly, we first built the paternal trio index and the maternal trio index by yak (version 0.1-r62-
dirty) with the following commands:
yak count -b37 -t <nThreads> -o <pat.yak> <paternal-short-reads.fastq>
yak count -b37 -t <nThreads> -o <mat.yak> <maternal-short-reads.fastq>
and then we produced the paternal assembly and the maternal assembly with the following command:
hifiasm -o <outputPrefix> -t <nThreads> -1 <pat.yak> -2 <mat.yak> --ul <ultra-long-reads.fasta> \
--hom-cov <homozygous coverage> <HiFi-reads.fasta>
To assemble the haploid Arabidopsis genome with HiFi and ultra-long reads, hifiasm was run with:
hifiasm -o <outputPrefix> -t <nThreads> -l0 --ul <ultra-long-reads.fasta> <HiFi-reads.fasta>
We also produced the HiFi-only assembly of Arabidopsis using:
hifiasm -o <outputPrefix> -t <nThreads> -l0 <HiFi-reads.fasta>
For the autotetraploid potato genome, hifiasm was run with HiFi and ultra-long reads along with the genetic map using
the command lines as follows:
hifiasm -o <outputPrefix> --hom-cov 116 -D10 -t <nThreads> -5 <genetic-map> \
--ul <ultra-long-reads.fasta> <HiFi-reads.fasta>
Without ultra-long reads, the command lines are:
hifiasm -o <outputPrefix> --hom-cov 116 -D10 -t <nThreads> -5 <genetic-map> <HiFi-reads.fasta>
1arXiv:2306.03399v1  [q-bio.GN]  6 Jun 20231.3 Verkko
For the haploid genome assembly of Arabidopsis, Verkko (version 1.3.1) was run with the following command line:
verkko -d <outDir> --hifi <HiFi-reads.fasta> --nano <ultra-long-reads.fasta>
For the trio-binning assembly, Verkko was run with:
verkko -d <outDir> --hifi <HiFi-reads.fasta> --nano <ultra-long-reads.fasta> \
--hap-kmers <mat hapmer db> <pat hapmer db> trio
We also ran Verkko with gfase to assemble human genomes with Hi-C reads. Its WDL workflow is started by creating
an unphased assembly graph with Verkko: https://dockstore.org/workflows/github.com/human-pangenomics/hpp p
roduction workflows/VerkkoCreateUnphasedGFA:master?tab=info, and then phases with the HiC reads on top of
the assembly graph using gfase: https://dockstore.org/workflows/github.com/meredith705/gfase wdl/gfaseWorkflow:
main?tab=info. The final step is to rerun Verkko with the phasing results produced by gfase: https://github.com/hum
an-pangenomics/hpp production workflows/blob/master/assembly/wdl/tasks/verkko consensus from gfase.wdl.
1.4 Running with Terra using cloud computing
We performed the assemblies of human genomes using preemptible instances provided by the Google Cloud Platform.
Hifiasm (UL) was divided into three steps to make full use of the preemptible instances. Step 1 of hifiasm (UL) with
trio-binning is:
hifiasm -o <outputPrefix> -t <nThreads> --bin-only -1 <pat.yak> -2 <mat.yak> \
--hom-cov <homozygous coverage> <HiFi-reads.fasta>
Step 2 of hifiasm (UL) with trio-binning is:
hifiasm -o <outputPrefix> -t <nThreads> --bin-only -1 <pat.yak> -2 <mat.yak> \
--hom-cov <homozygous coverage> --ul <ultra-long-reads.fasta> <any temporary file>
Step 3 of hifiasm (UL) with trio-binning is:
hifiasm -o <outputPrefix> -t <nThreads> -1 <pat.yak> -2 <mat.yak> \
--hom-cov <homozygous coverage> --ul <ultra-long-reads.fasta> <any temporary file>
For the single-sample phased assembly with Hi-C reads, the first step of hifiasm (UL) is:
hifiasm -o <outputPrefix> -t <nThreads> --bin-only --hom-cov <homozygous coverage> <HiFi-reads.fasta>
The second step of hifiasm (UL) with Hi-C reads is:
hifiasm -o <outputPrefix> -t <nThreads> --bin-only --hom-cov <homozygous coverage> \
--ul <ultra-long-reads.fasta> <any temporary file>
The final step of hifiasm (UL) with Hi-C reads is:
hifiasm -o <outputPrefix> -t <nThreads> --hom-cov <homozygous coverage> \
--h1 <HiC-reads-R1.fasta> --h2 <HiC-reads-R2.fasta> --ul <ultra-long-reads.fasta> <any temporary file>
For the trio-binning assembly of Verkko, the first step is producing an unphased assembly graph with the following
WDL script:
https://dockstore.org/workflows/github.com/human-pangenomics/hpp_production_workflows/VerkkoAssemb
lyScatter:master?tab=info
And then the trio phasing was added by calling Verkko again with Meryl hapmer DBs:
https://dockstore.org/workflows/github.com/human-pangenomics/hpp_production_workflows/TrioVerkkoAs
semblyScatter:master?tab=info
where hapmer DBs were created from parental Illumina data with:
https://dockstore.org/workflows/github.com/human-pangenomics/hpp_production_workflows/Meryl:
master?tab=info
Similarly, the Hi-C phased assembly of Verkko was started by creating an unphased assembly graph:
https://dockstore.org/workflows/github.com/human-pangenomics/hpp_production_workflows/VerkkoCreate
UnphasedGFA:master?tab=info
Then we ran gfase with the Hi-C reads to produce Hi-C phasing information:
https://dockstore.org/workflows/github.com/meredith705/gfase_wdl/gfaseWorkflow:main?tab=info
The phasing results from gfase were finally integrated into Verkko in a WDL:
https://github.com/human-pangenomics/hpp_production_workflows/blob/master/assembly/wdl/tasks/verkk
o_consensus_from_gfase.wdl
21.5 Running asmgene
For human genome assemblies, we aligned the cDNAs to the CHM13v2 reference genome and assembled contigs by
minimap2 (version 2.24-r1122), and evaluated the gene completeness with paftools.js from the minimap2 package:
minimap2 -cxsplice:hq -t <nThreads> <ref.fa> <cDNAs.fa> > <ref.paf>
minimap2 -cxsplice:hq -t <nThreads> <asm contig.fa> <cDNAs.fa> > <asm.paf>
paftools.js asmgene -a -i.97 <ref.paf> <asm.paf>
1.6 BUSCO
For non-human genome assemblies, BUSCO (version 5.4.4) was used with the following command:
busco -i <asm.fa> -m genome -o <outDir> -c <nThreads> -l <lineage dataset>
where ‘ lineage dataset ’ was set to brassicales odb10 andsolanales odb10 for Arabidopsis and potato genome
assemblies, respectively.
1.7 Phasing accuracy evaluation
For human genome assemblies, we used yak (version 0.1-r62-dirty) to measure the hamming error rate and the switch
error rate:
yak trioeval -t <nThreads> <paternal.yak> <maternal.yak> <asm contig.fa>
For the potato genome assembly, we employed haplotype-specific HiFi reads as markers to assess the phasing errors.
1.8 Counting Telomere-to-Telomere (T2T) contigs
The HPRC workflow (https://github.com/biomonika/HPP/blob/main/assembly/wdl/workflows/assessAsemblyComp
letness.wdl) was utilized to detect the T2T contigs. The CHM13v2 reference was set as the reference genome when
running the HPRC workflow with human genome assemblies. For non-human Arabidopsis and potato genomes, all
assemblies were aligned to the published genomes generated from the same datasets.
3Supplementary Table 1: Phasing errors of HPRC Year 2 and potato assemblies
Dataset AssemblerPhasing error (switch/hamming)
Hap1 (%) Hap2 (%) Hap3 (%) Hap4 (%) Unassigned (%)
HG002hifiasm(UL) trio 0.20/0.16 0.29/0.27 / / /
verkko trio 0.17/0.13 0.23/0.22 / / /
hifiasm(UL) hic 0.19/0.23 0.28/0.24 / / /
verkko gfase 0.26/0.32 0.19/0.19 / / 0.02/0.02
HG01099hifiasm(UL) trio 0.46/0.47 0.62/0.70 / / /
verkko trio 0.46/0.49 0.60/0.46 / / /
hifiasm(UL) hic 0.43/0.38 0.67/0.76 / / /
verkko gfase 0.74/0.69 0.74/0.70 / / 0.04/0.03
HG02004hifiasm(UL) trio 0.94/1.05 0.69/0.52 / / /
verkko trio 0.87/0.95 0.63/0.46 / / /
hifiasm(UL) hic 0.87/0.96 0.74/0.83 / / /
verkko gfase 0.70/0.71 0.80/0.89 / / 0.89/0.90
HG02071hifiasm(UL) trio 0.37/0.30 0.76/0.65 / / /
verkko trio 0.34/0.28 0.68/0.64 / / /
hifiasm(UL) hic 0.40/0.44 0.64/1.43 / / /
verkko gfase 0.63/0.98 0.60/0.54 / / 0.05/0.05
HG02293hifiasm(UL) trio 0.73/0.59 1.14/1.31 / / /
verkko trio 1.08/1.04 0.67/0.52 / / /
hifiasm(UL) hic 0.82/1.44 1.00/1.24 / / /
verkko gfase 0.84/1.52 0.90/0.87 / / 0.59/0.47
HG02300hifiasm(UL) trio 0.92/0.81 0.77/0.67 / / /
verkko trio 0.84/0.72 0.70/0.59 / / /
hifiasm(UL) hic 0.88/0.84 0.77/0.70 / / /
verkko gfase 0.87/1.30 0.69/0.65 / / 0.35/0.43
HG02647hifiasm(UL) trio 0.37/0.31 0.53/0.43 / / /
verkko trio 0.35/0.64 0.50/0.87 / / /
hifiasm(UL) hic 0.38/0.50 0.49/1.29 / / /
verkko gfase 0.54/1.51 0.53/1.61 / / 0.05/0.04
HG02809hifiasm(UL) trio 0.49/0.58 0.55/0.41 / / /
verkko trio 0.49/0.61 0.57/0.53 / / /
hifiasm(UL) hic 0.50/0.53 0.55/0.77 / / /
verkko gfase 0.49/0.64 0.57/0.72 / / 1.09/1.18
HG03710hifiasm(UL) trio 0.27/0.26 0.75/0.73 / / /
verkko trio 0.23/0.23 0.69/0.68 / / /
hifiasm(UL) hic 0.40/0.36 0.54/0.53 / / /
verkko gfase 0.51/0.54 0.53/0.55 / / 0.06/0.19
HG03927hifiasm(UL) trio 1.02/1.01 0.51/0.44 / / /
verkko trio 0.91/0.91 0.40/0.37 / / /
hifiasm(UL) hic 0.87/1.27 0.64/0.80 / / /
verkko gfase 0.83/1.41 0.51/1.00 / / 0.25/0.19
HG04228hifiasm(UL) trio 0.78/0.67 0.69/0.63 / / /
verkko trio 0.73/0.63 0.62/0.49 / / /
hifiasm(UL) hic 0.83/0.77 0.67/0.64 / / /
verkko gfase 0.94/0.78 0.77/0.63 / / 0.09/0.11
Potato ( ≥500kb)hifiasm(UL) 0.08/0.40 0.14/0.92 0.12/0.96 0.20/2.04 /
hifiasm(HiFi) 0.04/0.26 0.08/0.59 0.07/0.59 0.12/1.27 /
The phasing switch error rate refers to the proportion of adjacent haplotype-specific marker pairs originating from different haplotypes, while the
phasing hamming error rate represents the percentage of haplotype-specific markers that are incorrectly phased. For human genome assemblies,
phasing errors were calculated using haplotype-specific 31-mers obtained from parental short reads with yak. For the potato genome assembly, we
employed haplotype-specific HiFi reads as markers to assess the phasing errors.
4Supplementary Table 2: Phasing errors of HPRC Year 1 assemblies
Dataset AssemblerPhasing error (switch/hamming)
Hap1 (%) Hap2 (%) Hap3 (%) Hap4 (%) Unassigned (%)
HG00438hifiasm(UL) trio 1.07/0.89 1.10/1.02 / / /
verkko trio 1.00/1.09 1.00/1.03 / / /
HG00741hifiasm(UL) trio 1.11/1.27 0.59/0.49 / / /
verkko trio 0.54/0.37 1.03/1.26 / / /
HG01175hifiasm(UL) trio 1.03/0.83 0.87/0.71 / / /
verkko trio 0.78/0.73 0.93/0.87 / / /
HG03516hifiasm(UL) trio 0.64/0.44 0.83/0.79 / / /
verkko trio 0.62/0.49 0.79/0.86 / / /
HG01071hifiasm(UL) trio 0.39/0.36 0.92/1.06 / / /
verkko trio 0.87/0.98 0.33/0.42 / / /
HG01978hifiasm(UL) trio 0.92/0.75 0.89/0.92 / / /
verkko trio 0.81/0.95 0.86/0.99 / / /
HG00733hifiasm(UL) trio 1.00/0.83 1.02/1.07 / / /
verkko trio 0.92/1.03 0.91/0.75 / / /
HG00621hifiasm(UL) trio 0.45/0.55 0.73/0.58 / / /
verkko trio 0.61/0.45 0.41/0.53 / / /
HG01891hifiasm(UL) trio 0.70/0.70 0.59/0.42 / / /
verkko trio 0.67/0.70 0.57/0.65 / / /
HG01106hifiasm(UL) trio 0.34/0.30 0.45/0.37 / / /
verkko trio 0.38/0.46 0.31/0.34 / / /
HG02886hifiasm(UL) trio 0.85/0.86 0.27/0.27 / / /
verkko trio 0.26/0.49 0.83/1.30 / / /
The phasing switch error rate refers to the proportion of adjacent haplotype-specific marker pairs originating from different haplotypes, while the
phasing hamming error rate represents the percentage of haplotype-specific markers that are incorrectly phased. Phasing errors were calculated
using haplotype-specific 31-mers obtained from parental short reads with yak.
HG002
HG01099
HG02004
HG02071
HG02293
HG02300
HG02647
HG02809
HG03710
HG03927
HG04228
HG00438
HG00741
HG01175
HG03516
HG01071
HG01978
HG00733
HG00621
HG01891
HG01106
HG0288601234567891011121314151617181920T2T contig (#)
HPRC Year 2 HPRC Year 1aT2T contig (human)
hifiasm(UL)_trio
hifiasm(UL)_hic
verkko_trio
verkko_gfase
ArabidopsisPotato01234T2T contig (#)bT2T contig (plant, >=500kb)
hifiasm(UL)
hifiasm(HiFi)
verkko
Supplementary Fig. 1: Numbers of Telomere-to-Telomere (T2T) contigs for different assemblies. A contig is considered as
a T2T contig only if it can be aligned to an entire chromosome of the reference genome with telomeres on both ends. We utilized
the Human Pangenome Reference Consortium (HPRC) workflow to detect the T2T contigs. (a)Numbers of telomere-to-telomere
contigs for human genomes. There is no T2T contig for HPRC Year 1 assemblies of Verkko. All assemblies were aligned to the
CHM13v2 reference genome to detect T2T contigs. (b)Numbers of telomere-to-telomere contigs for plant genomes. To detect
T2T contigs, all assemblies were aligned to the published genomes generated from the same datasets.
5Supplementary Table 3: Statistics of human datasets
Group Sample SexHiFi read Ultra-long read
coverage coverage ( ≥50kb) coverage ( ≥100kb)
HPRC Year 1HG00438 Female 30X 29X 16X
HG00741 Female 38X 33X 19X
HG01175 Female 36X 32X 18X
HG03516 Female 35X 30X 17X
HG01071 Female 35X 29X 16X
HG01978 Female 37X 28X 16X
HG00733 Female 33X 25X 5X
HG00621 Male 40X 25X 14X
HG01891 Female 37X 26X 16X
HG01106 Male 48X 29X 15X
HG02886 Female 43X 24X 14X
HPRC Year 2HG002 Male 43X 31X
HG01099 Male 39X 31X
HG02004 Female 43X 45X
HG02071 Male 36X 24X
HG02293 Female 38X 40X
HG02300 Female 35X 36X
HG02647 Male 46X 21X
HG02809 Female 43X 34X
HG03710 Male 36X 26X
HG03927 Female 45X 29X
HG04228 Male 49X 30X
All HPRC Year 2 assemblies were produced using ultra-long reads with a minimum length of 100 kb. As there are not enough ≥100 kb ultra-long
reads, HPRC Year 1 assemblies were generated with ultra-long reads with a minimum length of 50 kb.
Supplementary Table 4: Numbers of Telomere-to-Telomere (T2T) contigs and scaffolds for human genome assemblies of Verkko
Group Sampleverkko trio verkko gfase
T2T Contig T2T Scaffold T2T Contig T2T Scaffold
HPRC Year 1HG00438 0 1
HG00741 0 5
HG01175 0 5
HG03516 0 2
HG01071 0 4
HG01978 0 10
HG00733 0 2
HG00621 0 12
HG01891 0 10
HG01106 0 15
HG02886 0 6
HPRC Year 2HG002 7 8 9 6
HG01099 7 10 9 9
HG02004 14 11 12 12
HG02071 6 21 8 17
HG02293 8 13 8 14
HG02300 12 11 12 8
HG02647 10 15 12 13
HG02809 6 15 8 15
HG03710 10 8 8 10
HG03927 15 9 15 9
HG04228 8 15 9 11
6